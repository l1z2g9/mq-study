/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mdb;

import javax.naming.InitialContext;

import jakarta.ejb.ActivationConfigProperty;
import jakarta.ejb.MessageDriven;
import jakarta.jms.Connection;
import jakarta.jms.ConnectionFactory;
import jakarta.jms.DeliveryMode;
import jakarta.jms.Destination;
import jakarta.jms.Message;
import jakarta.jms.MessageListener;
import jakarta.jms.MessageProducer;
import jakarta.jms.Session;
import jakarta.jms.TextMessage;

@MessageDriven(name = "IvtMDB", activationConfig = {
        @ActivationConfigProperty(propertyName = "destinationType", propertyValue = "jakarta.jms.Queue"),
        @ActivationConfigProperty(propertyName = "destinationLookup", propertyValue = "java:jboss/jms/ivt/IvtQueue"),
        @ActivationConfigProperty(propertyName = "connectionFactoryLookup", propertyValue = "java:jboss/jms/ivt/IvtCF"),
        @ActivationConfigProperty(propertyName = "acknowledgeMode", propertyValue = "Auto-acknowledge") })
// @Stateless
public class IvtMDB implements MessageListener {

    // static String ciphersFileName =
    // "com/ibm/mq/jmqi/internal/ciphermappings.json";

    /*
     * @Resource(name = "java:jboss/jms/ccm/MQCF")
     * private ConnectionFactory cf;
     */

    String cfJNDIName = "java:jboss/jms/ivt/IvtCF";

    @Override
    public void onMessage(Message message) {
        System.out.println("message = " + message);

        try {
            InitialContext ctx = new InitialContext();
            ConnectionFactory cf = (ConnectionFactory) ctx.lookup(this.cfJNDIName);
            Destination dest = message.getJMSReplyTo();
            if (null == dest)
                throw new IllegalArgumentException("The received message which does not have a replyTo queue set");

            try (Connection connection = cf.createConnection();) {
                connection.start();
                try (Session session = connection.createSession(true, Session.SESSION_TRANSACTED);
                        MessageProducer producer = session.createProducer(dest);) {
                    producer.setDeliveryMode(DeliveryMode.PERSISTENT);
                    TextMessage response = session.createTextMessage("This is reqply message");

                    response.setJMSCorrelationID(message.getJMSMessageID());
                    producer.send(response);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
